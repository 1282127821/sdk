# Properties file for iOS cross-compilation with Avian / OpenJDK

# private properties
#ios.avian.path=/Users/normenhansen/Documents/Code/jme3/sdk/jme3-ios/avian-openjdk
#ios.dev.root=/Applications/Xcode.app/Contents/Developer

# global project properties
#ios.version=5.0

# these normally don't change
ios.platform=darwin
ios.arm.flag=armv7
ios.i386.flag=i386

# java build paths
ios.build.classpath.dir=build/ios-classpath
ios.java.classes.dir=${ios.build.classpath.dir}/build
ios.build.classes.dir=${ios.build.classpath.dir}/classpath
ios.build.resources.jar=${ios.build.classpath.dir}/resources.jar
ios.classpath.checkfile=${ios.build.classpath.dir}/.classpath.last
ios.jar.excludes=jME3-desktop.jar, \
jME3-blender.jar, \
jME3-lwjgl.jar, \
jME3-lwjgl-natives.jar, \
jME3-bullet-natives.jar, \
jME3-jbullet.jar, \
jbullet.jar, \
stack-alloc.jar, \
vecmath.jar, \
jinput.jar, \
lwjgl.jar
ios.classpath.excludes=**/de/lessvoid/nifty/ClipboardAWT.class

# native build paths
ios.build.arch.dir=build/ios-${ios.arch}
ios.build.libs.dir=${ios.build.arch.dir}/libs
ios.build.libs.file=${ios.build.arch.dir}/libs.list
ios.build.resources.o=${ios.build.libs.dir}/resources-jar.o
ios.build.bootimage.o=${ios.build.libs.dir}/bootimage-bin.o
ios.build.codeimage.o=${ios.build.libs.dir}/codeimage-bin.o
ios.images.checkfile=${ios.build.arch.dir}/.binaries.last

# proguard properties
ios.proguard.vm.path=${ios.avian.path}/vm.pro
ios.proguard.openjdk.path=${ios.avian.path}/openjdk.pro
ios.proguard.options=-keep public class com.jme3.system.ios.*{public *;} \
-keep public class * extends com.jme3.system.ios.IosHarness{public *;} \
-keep public class * extends com.jme3.app.Application{public *;} \
-keep public class * extends com.jme3.system.JmeSystemDelegate{public *;} \
-keep public class * implements com.jme3.renderer.Renderer{public *;} \
-keep public class * implements com.jme3.asset.AssetLoader{public *;} \
-keep public class * implements com.jme3.asset.AssetLocator{public *;} \
-keep public class * implements de.lessvoid.nifty.screen.ScreenController{public *;}

# native compile
ios.cc.source.dir=ios/src
ios.cc.cache=${ios.build.arch.dir}/.nativebuild.cache
ios.cc.compiler=llvm-gcc-4.2
ios.cc.cflags=-D__IPHONE_OS_VERSION_MIN_REQUIRED=30202 \
-fobjc-abi-version=2 -fobjc-legacy-dispatch \
-I/System/Library/Frameworks/JavaVM.framework/Headers

# arm/i386 section, resolved in build file to ios.avian.bootimage-generator etc.
ios.avian.path.arm=${ios.avian.path}/avian-arm
ios.avian.path.i386=${ios.avian.path}/avian-i386
ios.avian.arm.classpath=${ios.avian.path}/classpath
ios.avian.i386.classpath=${ios.avian.path}/classpath

ios.avian.arm.bootimage-generator=${ios.avian.path.arm}/bootimage-generator
ios.avian.arm.generator=${ios.avian.path.arm}/generator
ios.avian.arm.converter=${ios.avian.path.arm}/binaryToObject
ios.avian.arm.binary=${ios.avian.path.arm}/libavian.a
ios.avian.i386.bootimage-generator=${ios.avian.path.i386}/bootimage-generator
ios.avian.i386.generator=${ios.avian.path.i386}/generator
ios.avian.i386.converter=${ios.avian.path.i386}/binaryToObject
ios.avian.i386.binary=${ios.avian.path.i386}/libavian.a

# XCode project
ios.xcode.project.dir=ios/project
